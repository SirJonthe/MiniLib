#############################################################################
# Makefile for building: MiniLib
# Generated by qmake (2.01a) (Qt 4.8.3) on: Sun Jan 12 17:05:20 2014
# Project:  MiniLib.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile MiniLib.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT
CFLAGS        = -pipe -O2 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)   -lSDL -lSDLmain 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		MGL/mglTransform.cpp \
		MGL/mglTexture.cpp \
		MGL/mglRasterizer.cpp \
		MGL/mglPlane.cpp \
		MGL/mglObject.cpp \
		MGL/mglModel.cpp \
		MGL/mglEngine.cpp \
		MGL/mglCollider.cpp \
		MGL/mglCamera.cpp \
		MTL/mtlString.cpp \
		MTL/mtlParser.cpp \
		MTL/mtlDirectory.cpp 
OBJECTS       = main.o \
		mglTransform.o \
		mglTexture.o \
		mglRasterizer.o \
		mglPlane.o \
		mglObject.o \
		mglModel.o \
		mglEngine.o \
		mglCollider.o \
		mglCamera.o \
		mtlString.o \
		mtlParser.o \
		mtlDirectory.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		MiniLib.pro
QMAKE_TARGET  = MiniLib
DESTDIR       = 
TARGET        = MiniLib

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: MiniLib.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile MiniLib.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile MiniLib.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/MiniLib1.0.0 || $(MKDIR) .tmp/MiniLib1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/MiniLib1.0.0/ && (cd `dirname .tmp/MiniLib1.0.0` && $(TAR) MiniLib1.0.0.tar MiniLib1.0.0 && $(COMPRESS) MiniLib1.0.0.tar) && $(MOVE) `dirname .tmp/MiniLib1.0.0`/MiniLib1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/MiniLib1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp MGL/mglObject.h \
		MTL/mtlString.h \
		MTL/mtlList.h \
		MGL/mglModel.h \
		MTL/mtlArray.h \
		MTL/mtlAsset.h \
		MTL/mtlDirectory.h \
		MTL/mtlParser.h \
		MML/mmlVector.h \
		MML/mmlMath.h \
		MGL/mglTexture.h \
		MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MML/mmlMatrix.h \
		MGL/mglPlane.h \
		MGL/mglCollider.h \
		MTL/mtlDuplex.h \
		MGL/mglRay.h \
		MGL/mglCamera.h \
		MGL/mglFramebuffer.h \
		MGL/mglEngine.h \
		MGL/mglRasterizer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mglTransform.o: MGL/mglTransform.cpp MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MML/mmlMatrix.h \
		MML/mmlVector.h \
		MML/mmlMath.h \
		MTL/mtlString.h \
		MTL/mtlList.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglTransform.o MGL/mglTransform.cpp

mglTexture.o: MGL/mglTexture.cpp MGL/mglTexture.h \
		MTL/mtlDirectory.h \
		MTL/mtlString.h \
		MTL/mtlList.h \
		MTL/mtlParser.h \
		MTL/mtlAsset.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglTexture.o MGL/mglTexture.cpp

mglRasterizer.o: MGL/mglRasterizer.cpp MML/mmlMath.h \
		MML/mmlFixed.h \
		MTL/mtlString.h \
		MTL/mtlList.h \
		MGL/mglRasterizer.h \
		MML/mmlVector.h \
		MML/mmlMatrix.h \
		MGL/mglPlane.h \
		MGL/mglModel.h \
		MTL/mtlArray.h \
		MTL/mtlAsset.h \
		MTL/mtlDirectory.h \
		MTL/mtlParser.h \
		MGL/mglTexture.h \
		MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MGL/mglFramebuffer.h \
		MGL/mglObject.h \
		MGL/mglCollider.h \
		MTL/mtlDuplex.h \
		MGL/mglRay.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglRasterizer.o MGL/mglRasterizer.cpp

mglPlane.o: MGL/mglPlane.cpp MGL/mglPlane.h \
		MML/mmlVector.h \
		MML/mmlMath.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglPlane.o MGL/mglPlane.cpp

mglObject.o: MGL/mglObject.cpp MGL/mglObject.h \
		MTL/mtlString.h \
		MTL/mtlList.h \
		MGL/mglModel.h \
		MTL/mtlArray.h \
		MTL/mtlAsset.h \
		MTL/mtlDirectory.h \
		MTL/mtlParser.h \
		MML/mmlVector.h \
		MML/mmlMath.h \
		MGL/mglTexture.h \
		MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MML/mmlMatrix.h \
		MGL/mglPlane.h \
		MGL/mglCollider.h \
		MTL/mtlDuplex.h \
		MGL/mglRay.h \
		MGL/mglEngine.h \
		MGL/mglFramebuffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglObject.o MGL/mglObject.cpp

mglModel.o: MGL/mglModel.cpp MTL/mtlParser.h \
		MTL/mtlString.h \
		MTL/mtlList.h \
		MTL/mtlDirectory.h \
		MGL/mglModel.h \
		MTL/mtlArray.h \
		MTL/mtlAsset.h \
		MML/mmlVector.h \
		MML/mmlMath.h \
		MGL/mglTexture.h \
		MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MML/mmlMatrix.h \
		MGL/mglPlane.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglModel.o MGL/mglModel.cpp

mglEngine.o: MGL/mglEngine.cpp MGL/mglEngine.h \
		MTL/mtlList.h \
		MTL/mtlString.h \
		MML/mmlVector.h \
		MML/mmlMath.h \
		MGL/mglFramebuffer.h \
		MGL/mglObject.h \
		MGL/mglModel.h \
		MTL/mtlArray.h \
		MTL/mtlAsset.h \
		MTL/mtlDirectory.h \
		MTL/mtlParser.h \
		MGL/mglTexture.h \
		MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MML/mmlMatrix.h \
		MGL/mglPlane.h \
		MGL/mglCollider.h \
		MTL/mtlDuplex.h \
		MGL/mglRay.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglEngine.o MGL/mglEngine.cpp

mglCollider.o: MGL/mglCollider.cpp MML/mmlVector.h \
		MML/mmlMath.h \
		MGL/mglObject.h \
		MTL/mtlString.h \
		MTL/mtlList.h \
		MGL/mglModel.h \
		MTL/mtlArray.h \
		MTL/mtlAsset.h \
		MTL/mtlDirectory.h \
		MTL/mtlParser.h \
		MGL/mglTexture.h \
		MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MML/mmlMatrix.h \
		MGL/mglPlane.h \
		MGL/mglCollider.h \
		MTL/mtlDuplex.h \
		MGL/mglRay.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglCollider.o MGL/mglCollider.cpp

mglCamera.o: MGL/mglCamera.cpp MGL/mglEngine.h \
		MTL/mtlList.h \
		MTL/mtlString.h \
		MML/mmlVector.h \
		MML/mmlMath.h \
		MGL/mglFramebuffer.h \
		MGL/mglObject.h \
		MGL/mglModel.h \
		MTL/mtlArray.h \
		MTL/mtlAsset.h \
		MTL/mtlDirectory.h \
		MTL/mtlParser.h \
		MGL/mglTexture.h \
		MGL/mglTransform.h \
		MML/mmlQuaternion.h \
		MML/mmlMatrix.h \
		MGL/mglPlane.h \
		MGL/mglCollider.h \
		MTL/mtlDuplex.h \
		MGL/mglRay.h \
		MGL/mglCamera.h \
		MGL/mglRasterizer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mglCamera.o MGL/mglCamera.cpp

mtlString.o: MTL/mtlString.cpp MTL/mtlString.h \
		MTL/mtlList.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mtlString.o MTL/mtlString.cpp

mtlParser.o: MTL/mtlParser.cpp MTL/mtlParser.h \
		MTL/mtlString.h \
		MTL/mtlList.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mtlParser.o MTL/mtlParser.cpp

mtlDirectory.o: MTL/mtlDirectory.cpp MTL/mtlDirectory.h \
		MTL/mtlString.h \
		MTL/mtlList.h \
		MTL/mtlParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mtlDirectory.o MTL/mtlDirectory.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

